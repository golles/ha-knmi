name: CI

on: # yamllint disable-line rule:truthy
  push:
    branches:
      - main
  pull_request: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  contents: read

jobs:
  checks:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: mypy
            command: uv run mypy .
          - name: Prettier
            command: npm run prettier -- --check .
          - name: Pylint
            command: uv run pylint custom_components/knmi tests
          - name: Ruff linter
            command: uv run ruff check --output-format=github .
          - name: Ruff formatter
            command: uv run ruff format --check .
          - name: ShellCheck
            command: uv run shellcheck scripts/*.sh
          - name: uv lock
            command: uv lock --check
          - name: YamlLint
            command: uv run yamllint --format github .
    runs-on: ubuntu-latest
    name: ${{ matrix.name }}
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4

      - name: Setup Python and uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          cache: npm

      - name: Run setup_env script
        run: ./scripts/setup_env.sh

      - name: Run ${{ matrix.name }}
        run: ${{ matrix.command }}

  tests:
    runs-on: ubuntu-latest
    needs:
      - checks
    name: CI - Tests
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4

      - name: Setup Python and uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          cache: npm

      - name: Run setup_env script
        run: ./scripts/setup_env.sh

      - name: Run tests
        run: uv run pytest

      - name: Make coverage XML report
        run: uv run coverage xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

      - name: SonarCloud Scan
        if: github.event.repository.private == false && github.event.pull_request.head.repo.fork == false
        uses: sonarsource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
